
canMove початкова провірка для того шоб ми не могли бити своїх по корольрах

для Figure првірки типу 
if(previosFigureColor === current){
    return false
}
return true

всі дочірні отримують
if(super.canMove()) - тобто в задежності шо певерне ця функція 

cellComponent 
<div onClick={e => click(cell)} style={{backgroundColor: cell.available && cell.figure ? 'green' : ''}} - фігури для биття 
className={['cell', cell.color, selected && !cell.figure ? 'selected' : ''].join(' ')}> і вибір путих фігур 

    {cell.available && !cell.figure && <div className='available'></div>} ходи відображаємо 
    {cell.figure?.logo && <img src={cell.figure?.logo} width={40} height={40} />}

</div>
ми для цьго створюємо available style тобто для показу можливих ходів 
і selected для вибору 


клік 2 рази в BoardComponent
    ми створюємо state для того шоб зробити 2 кліка 
    const [clicked, setClicked] = useState<Cell | null>(null)

    const click = (cell: Cell) => {
        тут ми робимо провірку яка відділяє 2 кліка тобто ми пишемо якшо cell !== clicked і тільки тоді ми йдемо далі 
        і всі вилики з основою clicked для cell (cell це наступний клік)
        if(clicked && cell !== clicked && clicked.figure?.canMove(cell)){
            clicked.moveFigure(cell); тут ми робимо переміщення 
            setClicked(null) обнуляємо стару позицію
        }
        else{
            якшо не виконалося то це 1 клік 
            setClicked(cell)
        }
    }

розберемо метод який переставляє фігури moveFigure
в Cell 
move(figure: Figure){ тут ми займаємося новою клітинокю так як ми викликали цей метод з основою target а це нова клі
        this.figure = figure
        this.figure.cell = this
    }
    moveFigure(target: Cell){
        this.figure?.PawnStart(target); цей метод буде потрібен для Pawn перший хід 

        if(this.figure && this.figure?.canMove(target)){ тут ми дивимося чи на 1 клікує фігура і canMove для target
            target.move(this.figure) з основою target передаємо фігуру
            this.figure = null після обнулюємо її 
        }
    }